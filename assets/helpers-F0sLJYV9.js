import{S as f,e as h}from"./index-fnHi-Pqe.js";const b=/url\("([\S*]+)"\)/,F=()=>navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome"),x=n=>new Promise(e=>{const t=new FileReader;t.onloadend=()=>e(t.result),t.readAsDataURL(n)}),S=(n,e)=>n.find(t=>{const s=t.style;return s.getPropertyValue("font-family").replace(/^"(.+)"$/,"$1")===e.family&&s.getPropertyValue("unicode-range")===e.unicodeRange}),U=async(n,e,t,s,r)=>{var u,g;const o=Array.from(new Set(e.map(a=>[...n.querySelectorAll(a)]).flat().map(a=>a.innerHTML).join("").replace(/\s/g,""))).join(""),l=await document.fonts.load(t.join(", "),o),i=(g=(u=document.querySelector("link#".concat(s)))==null?void 0:u.sheet)==null?void 0:g.cssRules;if(!i)return Promise.reject(new Error("cssRules can not be found in link#".concat(s)));const c=Array.from(i).flatMap(a=>a instanceof CSSImportRule?Array.from(a.styleSheet.cssRules):a).filter(a=>a instanceof CSSFontFaceRule),m=l.reduce((a,d)=>{const y=S(c,d);return y?a.find(N=>{const M=N.style,p=y.style;return M.getPropertyValue("font-family")===p.getPropertyValue("font-family")&&M.getPropertyValue("unicode-range")===p.getPropertyValue("unicode-range")})?a:a.concat(y):a},[]);return await Promise.all(m.map(async a=>{try{const d=await fetch(_(r,a)),y=await x(await d.blob());return a.cssText.replace(b,"url('".concat(y,"')"))}catch(d){return console.error(d),""}}))},_=(n,e)=>{var s;const t=e.style.getPropertyValue("src");return n+((s=t.match(b))==null?void 0:s[1])},P={[f.MTR]:{className:[".rmp-name__mtr__zh",".rmp-name__mtr__en"],cssFont:["80px GenYoMin TW","Vegur"],cssName:"fonts_mtr",baseUrl:"/styles/"},[f.MRTBasic]:{className:[".rmp-name__mrt"],cssFont:["100% IdentityFont"],cssName:"fonts_mrt",baseUrl:"/rmp/styles/"},[f.MRTInt]:{className:[".rmp-name__mrt"],cssFont:["100% IdentityFont"],cssName:"fonts_mrt",baseUrl:"/rmp/styles/"},[h.BerlinSBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["100% Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"},[h.BerlinUBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["100% Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"}},B=(n,e)=>n.filterEdges((t,s,r,o,l,i,c)=>e.has(r)&&e.has(o)),T=n=>{const e=Object.fromEntries([...Object.values(f),Object.values(h)].map(t=>[t,!1]));return n.forEachNode(t=>{const s=n.getNodeAttribute(t,"type");e[s]=!0}),e},A=(n,e,t,s,r,o)=>n<=r&&r<=t&&e<=o&&o<=s,C=(n,e,t,s,r)=>{const o=e<=s?e:s,l=t<=r?t:r,i=e<=s?s:e,c=t<=r?r:t;return n.filterNodes((m,u)=>A(o,l,i,c,u.x,u.y))},L=n=>{const e=n.currentTarget.getBoundingClientRect(),t=n.clientX-e.left,s=n.clientY-e.top;return{x:t,y:s}},w=(n,e,t,s)=>({x:n*t/100+s.x,y:e*t/100+s.y}),I=(n,e)=>Math.round(n/e)*e,j=n=>{let[e,t,s,r]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return n.forEachNode((o,l)=>{const i=document.getElementById(o);if(i){const c=R(i);e=Math.min(c.x,e),t=Math.min(c.y,t),s=Math.max(c.x+c.width,s),r=Math.max(c.y+c.height,r)}}),e-=50,t-=50,s+=100,r+=100,{xMin:e,yMin:t,xMax:s,yMax:r}},R=n=>{const e=n.getBBox(),t=n.ownerSVGElement,s=n.parentNode.getScreenCTM().inverse().multiply(n.getScreenCTM()),r=[t.createSVGPoint(),t.createSVGPoint(),t.createSVGPoint(),t.createSVGPoint()];r[0].x=e.x,r[0].y=e.y,r[1].x=e.x+e.width,r[1].y=e.y,r[2].x=e.x+e.width,r[2].y=e.y+e.height,r[3].x=e.x,r[3].y=e.y+e.height;let[o,l,i,c]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return r.forEach(m=>{m=m.matrixTransform(s),o=Math.min(o,m.x),i=Math.max(i,m.x),l=Math.min(l,m.y),c=Math.max(c,m.y)}),e.x=o,e.width=i-o,e.y=l,e.height=c-l,e},G=navigator.platform.startsWith("Mac"),X=n=>{for(let e=n.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[n[e],n[t]]=[n[t],n[e]]}return n};export{P as F,G as a,L as b,j as c,C as d,B as e,T as f,U as g,F as i,w as p,I as r,X as s};
