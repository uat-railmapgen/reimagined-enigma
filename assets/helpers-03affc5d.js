import{S as d,e as g}from"./index-2a1688f4.js";const p=/url\("([\S*]+)"\)/,F=()=>navigator.userAgent.includes("Safari")&&!navigator.userAgent.includes("Chrome"),_=t=>new Promise(e=>{const n=new FileReader;n.onloadend=()=>e(n.result),n.readAsDataURL(t)}),b=(t,e)=>t.find(n=>{const s=n.style;return s.getPropertyValue("font-family").replace(/^"(.+)"$/,"$1")===e.family&&s.getPropertyValue("unicode-range")===e.unicodeRange}),U=async(t,e,n,s,a)=>{var f,h;const i=Array.from(new Set(e.map(r=>[...t.querySelectorAll(r)]).flat().map(r=>r.innerHTML).join("").replace(/\s/g,""))).join(""),m=await document.fonts.load(n.join(", "),i),c=(h=(f=document.querySelector(`link#${s}`))==null?void 0:f.sheet)==null?void 0:h.cssRules;if(!c)return Promise.reject(new Error(`cssRules can not be found in link#${s}`));const o=Array.from(c).flatMap(r=>r instanceof CSSImportRule?Array.from(r.styleSheet.cssRules):r).filter(r=>r instanceof CSSFontFaceRule),l=m.reduce((r,u)=>{const y=b(o,u);return y?r.find(S=>{const x=S.style,M=y.style;return x.getPropertyValue("font-family")===M.getPropertyValue("font-family")&&x.getPropertyValue("unicode-range")===M.getPropertyValue("unicode-range")})?r:r.concat(y):r},[]);return await Promise.all(l.map(async r=>{try{const u=await fetch(N(a,r)),y=await _(await u.blob());return r.cssText.replace(p,`url('${y}')`)}catch(u){return console.error(u),""}}))},N=(t,e)=>{var s;const n=e.style.getPropertyValue("src");return t+((s=n.match(p))==null?void 0:s[1])},P={[d.MTR]:{className:[".rmp-name__mtr__zh",".rmp-name__mtr__en"],cssFont:["80px GenYoMin TW","Vegur"],cssName:"fonts_mtr",baseUrl:"/styles/"},[d.MRTBasic]:{className:[".rmp-name__mrt"],cssFont:["IdentityFont"],cssName:"fonts_mrt",baseUrl:"/rmp/styles/"},[d.MRTInt]:{className:[".rmp-name__mrt"],cssFont:["IdentityFont"],cssName:"fonts_mrt",baseUrl:"/rmp/styles/"},[g.BerlinSBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["16px Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"},[g.BerlinUBahnLineBadge]:{className:[".rmp-name__berlin"],cssFont:["16px Roboto"],cssName:"fonts_berlin",baseUrl:"/rmp/styles/"}},T=t=>{const e=t.currentTarget.getBoundingClientRect(),n=t.clientX-e.left,s=t.clientY-e.top;return{x:n,y:s}},B=(t,e,n,s)=>({x:t*n/100+s.x,y:e*n/100+s.y}),E=(t,e)=>Math.round(t/e)*e,L=t=>{let[e,n,s,a]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return t.forEachNode((i,m)=>{const c=document.getElementById(i);if(c){const o=A(c);e=Math.min(o.x,e),n=Math.min(o.y,n),s=Math.max(o.x+o.width,s),a=Math.max(o.y+o.height,a)}}),e-=50,n-=50,s+=100,a+=100,{xMin:e,yMin:n,xMax:s,yMax:a}},A=t=>{const e=t.getBBox(),n=t.ownerSVGElement,s=t.parentNode.getScreenCTM().inverse().multiply(t.getScreenCTM()),a=[n.createSVGPoint(),n.createSVGPoint(),n.createSVGPoint(),n.createSVGPoint()];a[0].x=e.x,a[0].y=e.y,a[1].x=e.x+e.width,a[1].y=e.y,a[2].x=e.x+e.width,a[2].y=e.y+e.height,a[3].x=e.x,a[3].y=e.y+e.height;let[i,m,c,o]=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MIN_VALUE,Number.MIN_VALUE];return a.forEach(l=>{l=l.matrixTransform(s),i=Math.min(i,l.x),c=Math.max(c,l.x),m=Math.min(m,l.y),o=Math.max(o,l.y)}),e.x=i,e.width=c-i,e.y=m,e.height=o-m,e},C=navigator.platform.startsWith("Mac"),w=t=>{for(let e=t.length-1;e>0;e--){const n=Math.floor(Math.random()*(e+1));[t[e],t[n]]=[t[n],t[e]]}return t};export{P as F,C as a,T as b,L as c,U as g,F as i,B as p,E as r,w as s};
