import{b as E}from"./react-2c0b8364.js";import{p as m}from"./index-2cfda547.js";const b=typeof window<"u"?E.useInsertionEffect||E.useLayoutEffect:()=>{};function W(r){const t=E.useRef(O);b(()=>{t.current=r},[r]);const o=E.useRef(null);return o.current||(o.current=function(){return t.current.apply(this,arguments)}),o.current}function O(){throw new Error("INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.")}const I=(r,t,o)=>{const a={};let[d,u]=[0,0];t.forEach(n=>{const c=r.getNodeAttributes(n);a[n]=c,d+=c.x,u+=c.y});const f={};o.forEach(n=>{const[c,h]=r.extremities(n);f[n]={attr:r.getEdgeAttributes(n),source:c,target:h}});const i={app:"rmp",version:1,nodesWithAttrs:a,edgesWithAttrs:f,avgX:d/t.size,avgY:u/t.size};return JSON.stringify(i)},S=(r,t,o,a)=>{const{nodesWithAttrs:d,edgesWithAttrs:u,version:f}=JSON.parse(r);if(f!==1)throw Error(`Unrecognized version: ${f}`);const i={};Object.keys(d).filter(e=>t.hasNode(e)).forEach(e=>{const s=m(10);if(e.startsWith("stn_"))i[e]=`stn_${s}`;else if(e.startsWith("misc_node_"))i[e]=`misc_node_${s}`;else throw Error(`Unrecognized node id: ${e}`)}),Object.keys(u).filter(e=>t.hasEdge(e)).forEach(e=>i[e]=`line_${m(10)}`);const n=Object.entries(i).reduce((e,[s,l])=>e.replaceAll(s,l),r),{nodesWithAttrs:c,edgesWithAttrs:h,avgX:g,avgY:A}=JSON.parse(n),[N,p]=[o-g,a-A];Object.entries(c).forEach(([e,s])=>{s.x+=N,s.y+=p,t.addNode(e,s)}),Object.entries(h).forEach(([e,{attr:s,source:l,target:v}])=>t.addDirectedEdgeWithKey(e,l,v,s))};export{I as e,S as i,W as u};
