import{b as h}from"./react-bf6ce531.js";import{p as g}from"./index-f55d506a.js";const O=typeof window<"u"?h.useInsertionEffect||h.useLayoutEffect:()=>{};function S(t){const n=h.useRef(y);O(()=>{n.current=t},[t]);const r=h.useRef(null);return r.current||(r.current=function(){return n.current.apply(this,arguments)}),r.current}function y(){throw new Error("INVALID_USEEVENT_INVOCATION: the callback from useEvent cannot be invoked before the component has mounted.")}const W=(t,n)=>{const r={},a={};let[u,E]=[0,0],i=0;n.forEach(f=>{if(t.hasNode(f)){const o=f,c=t.getNodeAttributes(o);r[o]=c,u+=c.x,E+=c.y,i++}else if(t.hasEdge(f)){const o=f,[c,l]=t.extremities(o);a[o]={attr:t.getEdgeAttributes(o),source:c,target:l}}});const d={app:"rmp",version:1,nodesWithAttrs:r,edgesWithAttrs:a,avgX:u/i,avgY:E/i};return JSON.stringify(d)},w=(t,n,r,a)=>{const{nodesWithAttrs:u,edgesWithAttrs:E,version:i}=JSON.parse(t);if(i!==1)throw Error(`Unrecognized version: ${i}`);const d={};Object.keys(u).filter(e=>n.hasNode(e)).forEach(e=>{const s=g(10);if(e.startsWith("stn_"))d[e]=`stn_${s}`;else if(e.startsWith("misc_node_"))d[e]=`misc_node_${s}`;else throw Error(`Unrecognized node id: ${e}`)}),Object.keys(E).filter(e=>n.hasEdge(e)).forEach(e=>d[e]=`line_${g(10)}`);const f=Object.entries(d).reduce((e,[s,m])=>e.replaceAll(s,m),t),{nodesWithAttrs:o,edgesWithAttrs:c,avgX:l,avgY:N}=JSON.parse(f),[b,A]=[r-l,a-N];return Object.entries(o).forEach(([e,s])=>{s.x+=b,s.y+=A,n.addNode(e,s)}),Object.entries(c).forEach(([e,{attr:s,source:m,target:v}])=>n.addDirectedEdgeWithKey(e,m,v,s)),{nodes:new Set(Object.keys(o)),edges:new Set(Object.keys(c))}};export{W as e,w as i,S as u};
